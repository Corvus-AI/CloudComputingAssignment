{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Dashboard","state","addFunds","alert","this","className","id","class","type","onChange","e","setState","target","value","onClick","Component","App","response","isLoggedIn","axios","get","then","res","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAKMA,E,4MACJC,MAAQ,CACNC,SAAS,G,8CAGX,WAEEC,MAAM,gBAAiBC,KAAKH,MAAMC,Y,oBAIpC,WAAU,IAAD,OAEL,OACE,eAAC,WAAD,WACA,yBAAQG,UAAU,mCAAmCC,GAAG,WAAxD,UACA,wBAAQD,UAAU,yCAAlB,qBACA,qBAAKA,UAAU,YAAf,SACA,oBAAIA,UAAU,gCAAd,gCAGA,uBACA,qBAAKA,UAAU,2BAAf,SACA,qBAAIA,UAAU,aAAd,6CAXU,OAcV,qBAAKA,UAAU,8BAAf,SACA,uBAAME,MAAM,yBAAZ,UACA,2CACA,qBAAKA,MAAM,aAAX,SACE,uBAAOA,MAAM,WAAWC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAK,EAAKC,SAAS,CAACT,SAAWQ,EAAEE,OAAOC,aAExF,wBAAQR,UAAU,qBAAqBS,QAAS,kBAAI,EAAKZ,YAAzD,sBAKA,uBAAM,8B,GArCUa,aAiETC,E,4MApBbf,MAAQ,CACNgB,SAAU,GACVC,YAAY,G,uDAGd,WAAqB,IAAD,OAClBC,IAAMC,IAAI,eAAeC,MAAK,SAACC,GAC7B,IAAML,EAAWK,EAAIC,KACrB,EAAKZ,SAAS,CAACM,kB,oBAInB,WACE,OAEE,cAAC,EAAD,Q,GAhBYF,aCrCHS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.17c78376.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Fragment} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios'\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    addFunds:0\r\n  };\r\n\r\n  addFunds()\r\n  {\r\n    alert(\"Funds added: \"+ this.state.addFunds);\r\n  }\r\n  \r\n\r\n  render() {\r\n      var balance=0;\r\n      return(\r\n        <Fragment>\r\n        <header className=\"w3-container w3-theme w3-padding\" id=\"myHeader\">\r\n        <button className=\"w3-button w3-theme w3-display-topright\"> Logout</button>\r\n        <div className=\"w3-center\">\r\n        <h1 className=\"w3-xxxlarge w3-animate-bottom\">Welcome, User</h1>\r\n        </div>\r\n        </header>\r\n        <br />\r\n        <div className=\"w3-center w3-display-top\">\r\n        <h1 className=\"w3-xxlarge\">Your current account balance is {balance}</h1>\r\n        </div>\r\n        \r\n        <div className=\"w3-center w3-display-middle\">\r\n        <form class=\"w3-container w3-card-4\">\r\n        <h2>Add Funds</h2>\r\n        <div class=\"w3-section\">      \r\n          <input class=\"w3-input\" type=\"text\" onChange={(e)=>this.setState({addFunds : e.target.value})}/>\r\n        </div>\r\n        <button className=\"w3-button w3-theme\" onClick={()=>this.addFunds()}>Add</button>\r\n        </form>\r\n        </div>\r\n        \r\n\r\n        <br /><br />\r\n        </Fragment>\r\n      )\r\n    \r\n  }  \r\n}\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: {},\r\n    isLoggedIn: true\r\n  };\r\n  \r\n  componentDidMount() {\r\n    axios.get('/getBalance').then((res) => {\r\n      const response = res.data;\r\n      this.setState({response});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <Dashboard />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}